{"version":3,"sources":["pages/Home.js","App.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Header","Home","state","form_details","annualCostAlt","numberOfEmp","avgEmpWage","weeksToBuild","daysMaintenance","classes","this","props","onInputChange","event","Object","assign","target","id","value","setState","alterState","message","error_notification_msg","triggered","Container","component","maxWidth","CssBaseline","className","paper","form","noValidate","Grid","container","spacing","Box","mt","item","xs","TextField","required","fullWidth","label","name","autoComplete","type","onChange","Button","submit","onClick","form_data","console","log","isNaN","parseInt","notification_msg","Component","withStyles","theme","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","width","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed8a7ec7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Made with loads of \\u2615 by '}\r\n            <Link color=\"inherit\" href=\"https://hackerstribe.tech/\">\r\n                Hacker's Tribe Foundation\r\n            </Link>{' '}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction Header() {\r\n    return (\r\n        <Typography color=\"Secondary\">\r\n            IF YOU BUILD IT IN-HOUSE\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = (theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n});\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        form_details: {\r\n            annualCostAlt: \"\",\r\n            numberOfEmp: \"\",\r\n            avgEmpWage: \"\",\r\n            weeksToBuild: \"\",\r\n            daysMaintenance: \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        const onInputChange= (event)=>{\r\n            let form_details = Object.assign({}, this.state.form_details)\r\n            form_details[event.target.id] = event.target.value\r\n            this.setState({\r\n                form_details: form_details\r\n            })\r\n        }\r\n\r\n        const onSubmitForm= (event)=>{\r\n            let form_data= Object.assign({}, this.state.form_details)\r\n            console.log(this.state);\r\n\r\n            if(isNaN(parseInt(form_data.annualCostAlt))){\r\n                alterState(\"Error: Incorrect value provided\")\r\n                return null;\r\n            }\r\n\r\n            if(isNaN(parseInt(form_data.numberOfEmp))){\r\n                alterState(\"Error: Incorrect value provided\")\r\n                return null;\r\n            }\r\n\r\n            if(isNaN(parseInt(form_data.avgEmpWage))){\r\n                alterState(\"Error: Incorrect value provided\")\r\n                return null;\r\n            }\r\n\r\n            if(isNaN(parseInt(form_data.weeksToBuild))){\r\n                alterState(\"Error: Incorrect value provided\")\r\n                return null;\r\n            }\r\n\r\n            if(isNaN(parseInt(form_data.daysMaintenance))){\r\n                alterState(\"Error: Incorrect value provided\")\r\n                return null;\r\n            }\r\n\r\n            this.setState({\r\n                notification_msg: {\r\n                    triggered: true,\r\n                    message: \"\"\r\n                }\r\n            })\r\n        }\r\n\r\n        const alterState = (message) => {\r\n                this.setState({\r\n                    form_details: {\r\n                        annualCostAlt: \"\",\r\n                        numberOfEmp: \"\",\r\n                        avgEmpWage: \"\",\r\n                        weeksToBuild: \"\",\r\n                        daysMaintenance: \"\"\r\n                    },\r\n                    error_notification_msg: {\r\n                        triggered: true,\r\n                        message: message\r\n                    }\r\n                })\r\n        }\r\n\r\n        const onSnackBarHandleClose = () => {\r\n            this.setState({\r\n                notification_msg: {\r\n                    triggered: false,\r\n                    message: \"\"\r\n                }\r\n            })\r\n        }\r\n\r\n        const onErrorSnackBarHandleClose = () => {\r\n            this.setState({\r\n                error_notification_msg: {\r\n                    triggered: false,\r\n                    message: \"\"\r\n                }\r\n            })\r\n        }\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" align=\"center\" variant=\"h4\">\r\n                        AI Model Feasibility Calculator\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Box mt={5}>\r\n                                <Header/>\r\n                             </Box>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"annualCostAlt\"\r\n                                    label=\"Annual Cost for External AI Model\"\r\n                                    name=\"annualCostAlt\"\r\n                                    autoComplete=\"annualCostAlt\"\r\n                                    type=\"annualCostAlt\"\r\n                                    value={this.state.form_details.annualCostAlt}\r\n                                    onChange={onInputChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Box mt={5}>\r\n                                <Header/>\r\n                             </Box>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"numberOfEmp\"\r\n                                    label=\"Number of Employees\"\r\n                                    name=\"numberOfEmp\"\r\n                                    autoComplete=\"numberOfEmp\"\r\n                                    value={this.state.form_details.numberOfEmp}\r\n                                    onChange={onInputChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"avgEmpWage\"\r\n                                    label=\"Average Employee Wage\"\r\n                                    name=\"avgEmpWage\"\r\n                                    autoComplete=\"avgEmpWage\"\r\n                                    value={this.state.form_details.avgEmpWage}\r\n                                    onChange={onInputChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"weeksToBuild\"\r\n                                    label=\"Weeks to Build\"\r\n                                    name=\"weeksToBuild\"\r\n                                    autoComplete=\"weeksToBuild\"\r\n                                    value={this.state.form_details.weeksToBuild}\r\n                                    onChange={onInputChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"daysMaintenance\"\r\n                                    label=\"Days of Maintenance\"\r\n                                    name=\"daysMaintenance\"\r\n                                    autoComplete=\"daysMaintenance\"\r\n                                    value={this.state.form_details.daysMaintenance}\r\n                                    onChange={onInputChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={onSubmitForm}\r\n                        >\r\n                            Check Feasibility\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n                <Box mt={5}>\r\n                    <Copyright/>\r\n                </Box>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(Home)","import Home from \"./pages/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}